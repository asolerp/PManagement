# Transform this into a `node_require` generic function:
def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Use it to require both react-native's and this package's scripts:
node_require('react-native/scripts/react_native_pods.rb')

use_modular_headers!
platform :ios, '13.0'
prepare_react_native_project!

# Firebase static framework configuration
$RNFirebaseAsStaticFramework = true

# Disable Flipper for production builds to avoid framework conflicts
flipper_config = FlipperConfiguration.disabled

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
else
  use_frameworks! :linkage => :static
end

target 'PortManagement' do
  config = use_native_modules!

  # Firebase pods
  pod 'GoogleUtilities'
  pod 'Firebase/Core'
  pod 'Firebase/Analytics'
  pod 'Firebase/Auth'
  pod 'Firebase/Firestore'
  pod 'Firebase/Functions'
  pod 'Firebase/Messaging'
  pod 'Firebase/RemoteConfig'
  pod 'Firebase/Storage'
  pod 'Firebase/InAppMessaging'
  pod 'Firebase/Installations'

  use_react_native!(
    :path => config[:reactNativePath],
    # Hermes is now enabled by default. Disable by setting this flag to false.
    :hermes_enabled => true,
    :fabric_enabled => false,
    # Enables Flipper.
    :flipper_configuration => flipper_config,
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'PortManagement-Development' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    
    # https://github.com/facebook/react-native/blob/main/packages/react-native/scripts/react_native_pods.rb#L197-L202
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )
    
    # Fix for RCT-Folly
    `sed -i -e  $'s/__IPHONE_10_0/__IPHONE_15_0/' #{installer.sandbox.root}/RCT-Folly/folly/portability/Time.h`

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Set minimum iOS deployment target to 13.0 for MapboxMaps compatibility
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
        
        # Enable user script sandboxing
        config.build_settings['ENABLE_USER_SCRIPT_SANDBOXING'] = 'NO'
        
        # Enable dSYM generation
        config.build_settings['DEBUG_INFORMATION_FORMAT'] = 'dwarf-with-dsym'
        
        # Fix Firebase non-modular header warnings with static frameworks
        if target.name.start_with?('RNFB') || target.name.start_with?('Firebase')
          config.build_settings['CLANG_WARN_NON_MODULAR_INCLUDE_IN_FRAMEWORK_MODULE'] = 'NO'
          config.build_settings['CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES'] = 'YES'
          config.build_settings['DEFINES_MODULE'] = 'YES'
        end
        
        # Fix BoringSSL-GRPC compilation issues
        if target.name == 'BoringSSL-GRPC'
          config.build_settings['GCC_WARN_INHIBIT_ALL_WARNINGS'] = 'NO'
          config.build_settings['WARNING_CFLAGS'] = '$(inherited) -Wno-shorten-64-to-32'
          config.build_settings['OTHER_CFLAGS'] = '$(inherited) -Wno-shorten-64-to-32'
        end
      end
      
      # Additional fix for BoringSSL-GRPC compiler flags at file level
      if target.name == 'BoringSSL-GRPC'
        target.source_build_phase.files.each do |file|
          if file.settings && file.settings['COMPILER_FLAGS']
            flags = file.settings['COMPILER_FLAGS'].split
            flags.reject! { |flag| flag.include?('-GCC_WARN_INHIBIT_ALL_WARNINGS') || flag == '-G' }
            file.settings['COMPILER_FLAGS'] = flags.join(' ')
          end
        end
      end
    end
    
    # Global fix for non-modular includes in framework modules
    installer.pods_project.build_configurations.each do |config|
      config.build_settings["CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES"] = true
    end
  end
end